<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on jeudi 4 juillet 2019 at 2:52:18</time-stamp>


<class>
<name>CormasWS</name>
<environment>CormasNS.Kernel</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>myCormas activeProbes </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Cormas</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>CormasNS.Kernel.CormasWS class</class-id> <category>instance creation</category>

<body package="Cormas" selector="new">new
	"Answer a newly created and initialized instance."

	^super new initialize</body>
</methods>

<methods>
<class-id>CormasNS.Kernel.CormasWS class</class-id> <category>ws pragmas</category>

<body package="Cormas" selector="operationPragmas">operationPragmas
"Generated by WS Tool on #(March 3, 2017 6:06:06 pm)"
	&lt;pragmas: #instance&gt;
	^OrderedCollection new
		add: #addException:type:;
		add: #addParameter:type:;
		add: #documentation:;
		add: #inputHeader:;
		add: #operationName:;
		add: #outputHeader:;
		add: #result:;
		yourself</body>
</methods>

<methods>
<class-id>CormasNS.Kernel.CormasWS class</class-id> <category>wsdl schema</category>

<body package="Cormas" selector="wsdlSchema">wsdlSchema
	
	^'&lt;definitions targetNamespace="urn:vwservices" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="urn:vwservices"&gt;
	&lt;types&gt;
		&lt;schema targetNamespace="urn:vwservices" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:vwservices"&gt;
			&lt;complexType name="CollectionOfFloat"&gt;
				&lt;sequence&gt;
					&lt;element name="Float" minOccurs="0" maxOccurs="unbounded" type="xsd:float"/&gt;
				&lt;/sequence&gt;
			&lt;/complexType&gt;
			&lt;element name="GetProbeOfClass"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="probName" type="xsd:string"/&gt;
						&lt;element name="className" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="GetProbeOfClassResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="tns:CollectionOfFloat"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetStringAttributeOfClassValue"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="attName" type="xsd:string"/&gt;
						&lt;element name="className" type="xsd:string"/&gt;
						&lt;element name="value" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetStringAttributeOfClassValueResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="ActivateProbeOfClass"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="probeName" type="xsd:string"/&gt;
						&lt;element name="className" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="ActivateProbeOfClassResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:boolean"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetInit"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="initMethod" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetInitResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:boolean"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetAttributeOfClassValue"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="attName" type="xsd:string"/&gt;
						&lt;element name="className" type="xsd:string"/&gt;
						&lt;element name="value" type="xsd:float"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetAttributeOfClassValueResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="RunSimu"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="duration" type="xsd:short"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="RunSimuResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:boolean"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SayHelloResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="LoadModelFromParcelName"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="modelName" type="xsd:string"/&gt;
						&lt;element name="parcelFileName" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="LoadModelFromParcelNameResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:boolean"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetStep"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="stepMethod" type="xsd:string"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
			&lt;element name="SetStepResponse"&gt;
				&lt;complexType&gt;
					&lt;sequence&gt;
						&lt;element name="result" type="xsd:boolean"/&gt;
					&lt;/sequence&gt;
				&lt;/complexType&gt;
			&lt;/element&gt;
		&lt;/schema&gt;
	&lt;/types&gt;
	&lt;message name="GetProbeOfClassSoapIn"&gt;
		&lt;part name="parameter" element="tns:GetProbeOfClass"/&gt;
	&lt;/message&gt;
	&lt;message name="GetProbeOfClassSoapOut"&gt;
		&lt;part name="return" element="tns:GetProbeOfClassResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="SetStringAttributeOfClassValueSoapIn"&gt;
		&lt;part name="parameter" element="tns:SetStringAttributeOfClassValue"/&gt;
	&lt;/message&gt;
	&lt;message name="SetStringAttributeOfClassValueSoapOut"&gt;
		&lt;part name="return" element="tns:SetStringAttributeOfClassValueResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="ActivateProbeOfClassSoapIn"&gt;
		&lt;part name="parameter" element="tns:ActivateProbeOfClass"/&gt;
	&lt;/message&gt;
	&lt;message name="ActivateProbeOfClassSoapOut"&gt;
		&lt;part name="return" element="tns:ActivateProbeOfClassResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="SetInitSoapIn"&gt;
		&lt;part name="parameter" element="tns:SetInit"/&gt;
	&lt;/message&gt;
	&lt;message name="SetInitSoapOut"&gt;
		&lt;part name="return" element="tns:SetInitResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="SetAttributeOfClassValueSoapIn"&gt;
		&lt;part name="parameter" element="tns:SetAttributeOfClassValue"/&gt;
	&lt;/message&gt;
	&lt;message name="SetAttributeOfClassValueSoapOut"&gt;
		&lt;part name="return" element="tns:SetAttributeOfClassValueResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="RunSimuSoapIn"&gt;
		&lt;part name="parameter" element="tns:RunSimu"/&gt;
	&lt;/message&gt;
	&lt;message name="RunSimuSoapOut"&gt;
		&lt;part name="return" element="tns:RunSimuResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="SayHelloSoapIn"/&gt;
	&lt;message name="SayHelloSoapOut"&gt;
		&lt;part name="return" element="tns:SayHelloResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="LoadModelFromParcelNameSoapIn"&gt;
		&lt;part name="parameter" element="tns:LoadModelFromParcelName"/&gt;
	&lt;/message&gt;
	&lt;message name="LoadModelFromParcelNameSoapOut"&gt;
		&lt;part name="return" element="tns:LoadModelFromParcelNameResponse"/&gt;
	&lt;/message&gt;
	&lt;message name="SetStepSoapIn"&gt;
		&lt;part name="parameter" element="tns:SetStep"/&gt;
	&lt;/message&gt;
	&lt;message name="SetStepSoapOut"&gt;
		&lt;part name="return" element="tns:SetStepResponse"/&gt;
	&lt;/message&gt;
	&lt;portType name="CormasWS"&gt;
		&lt;operation name="GetProbeOfClass"&gt;
			&lt;input message="tns:GetProbeOfClassSoapIn"/&gt;
			&lt;output message="tns:GetProbeOfClassSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="SetStringAttributeOfClassValue"&gt;
			&lt;input message="tns:SetStringAttributeOfClassValueSoapIn"/&gt;
			&lt;output message="tns:SetStringAttributeOfClassValueSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="ActivateProbeOfClass"&gt;
			&lt;input message="tns:ActivateProbeOfClassSoapIn"/&gt;
			&lt;output message="tns:ActivateProbeOfClassSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="SetInit"&gt;
			&lt;input message="tns:SetInitSoapIn"/&gt;
			&lt;output message="tns:SetInitSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="SetAttributeOfClassValue"&gt;
			&lt;input message="tns:SetAttributeOfClassValueSoapIn"/&gt;
			&lt;output message="tns:SetAttributeOfClassValueSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="RunSimu"&gt;
			&lt;input message="tns:RunSimuSoapIn"/&gt;
			&lt;output message="tns:RunSimuSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="SayHello"&gt;
			&lt;input message="tns:SayHelloSoapIn"/&gt;
			&lt;output message="tns:SayHelloSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="LoadModelFromParcelName"&gt;
			&lt;input message="tns:LoadModelFromParcelNameSoapIn"/&gt;
			&lt;output message="tns:LoadModelFromParcelNameSoapOut"/&gt;
		&lt;/operation&gt;
		&lt;operation name="SetStep"&gt;
			&lt;input message="tns:SetStepSoapIn"/&gt;
			&lt;output message="tns:SetStepSoapOut"/&gt;
		&lt;/operation&gt;
	&lt;/portType&gt;
	&lt;binding name="CormasWS" type="tns:CormasWS"&gt;
		&lt;soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/&gt;
		&lt;operation name="GetProbeOfClass"&gt;
			&lt;soap:operation soapAction="urn:vwservices#GetProbeOfClass" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="SetStringAttributeOfClassValue"&gt;
			&lt;soap:operation soapAction="urn:vwservices#SetStringAttributeOfClassValue" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="ActivateProbeOfClass"&gt;
			&lt;soap:operation soapAction="urn:vwservices#ActivateProbeOfClass" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="SetInit"&gt;
			&lt;soap:operation soapAction="urn:vwservices#SetInit" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="SetAttributeOfClassValue"&gt;
			&lt;soap:operation soapAction="urn:vwservices#SetAttributeOfClassValue" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="RunSimu"&gt;
			&lt;soap:operation soapAction="urn:vwservices#RunSimu" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="SayHello"&gt;
			&lt;soap:operation soapAction="urn:vwservices#SayHello" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="LoadModelFromParcelName"&gt;
			&lt;soap:operation soapAction="urn:vwservices#LoadModelFromParcelName" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
		&lt;operation name="SetStep"&gt;
			&lt;soap:operation soapAction="urn:vwservices#SetStep" style="document"/&gt;
			&lt;input&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/input&gt;
			&lt;output&gt;
				&lt;soap:body use="literal"/&gt;
			&lt;/output&gt;
		&lt;/operation&gt;
	&lt;/binding&gt;
	&lt;service name="CormasWSServer"&gt;
		&lt;port name="CormasWS" binding="tns:CormasWS"&gt;
			&lt;soap:address location="http://localhost:4920/CormasWS"/&gt;
		&lt;/port&gt;
	&lt;/service&gt;
	&lt;schemaBindings&gt;
		&lt;xmlToSmalltalkBinding name="" targetNamespace="urn:vwservices" defaultClassNamespace="CormasNS.Kernel" elementFormDefault="qualified" xmlns="urn:visualworks:VWSchemaBinding" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:vwservices"&gt;
			&lt;sequence_of name="CollectionOfFloat"&gt;
				&lt;element name="Float" minOccurs="0" maxOccurs="unbounded" ref="xsd:float"/&gt;
			&lt;/sequence_of&gt;
			&lt;struct name="GetProbeOfClass" smalltalkClass="Struct"&gt;
				&lt;element name="probName" ref="xsd:string" conversionId="ByteSymbol"/&gt;
				&lt;element name="className" ref="xsd:string" conversionId="ByteSymbol"/&gt;
			&lt;/struct&gt;
			&lt;struct name="GetProbeOfClassResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="tns:CollectionOfFloat"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetStringAttributeOfClassValue" smalltalkClass="Struct"&gt;
				&lt;element name="attName" ref="xsd:string"/&gt;
				&lt;element name="className" ref="xsd:string"/&gt;
				&lt;element name="value" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetStringAttributeOfClassValueResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="ActivateProbeOfClass" smalltalkClass="Struct"&gt;
				&lt;element name="probeName" ref="xsd:string"/&gt;
				&lt;element name="className" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="ActivateProbeOfClassResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:boolean"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetInit" smalltalkClass="Struct"&gt;
				&lt;element name="initMethod" ref="xsd:string" conversionId="ByteSymbol"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetInitResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:boolean"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetAttributeOfClassValue" smalltalkClass="Struct"&gt;
				&lt;element name="attName" ref="xsd:string"/&gt;
				&lt;element name="className" ref="xsd:string"/&gt;
				&lt;element name="value" ref="xsd:float"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetAttributeOfClassValueResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="RunSimu" smalltalkClass="Struct"&gt;
				&lt;element name="duration" ref="xsd:short"/&gt;
			&lt;/struct&gt;
			&lt;struct name="RunSimuResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:boolean"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SayHelloResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="LoadModelFromParcelName" smalltalkClass="Struct"&gt;
				&lt;element name="modelName" ref="xsd:string"/&gt;
				&lt;element name="parcelFileName" ref="xsd:string"/&gt;
			&lt;/struct&gt;
			&lt;struct name="LoadModelFromParcelNameResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:boolean"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetStep" smalltalkClass="Struct"&gt;
				&lt;element name="stepMethod" ref="xsd:string" conversionId="ByteSymbol"/&gt;
			&lt;/struct&gt;
			&lt;struct name="SetStepResponse" smalltalkClass="Struct"&gt;
				&lt;element name="result" ref="xsd:boolean"/&gt;
			&lt;/struct&gt;
		&lt;/xmlToSmalltalkBinding&gt;
	&lt;/schemaBindings&gt;
&lt;/definitions&gt;'</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>CormasNS.Kernel.CormasWS</class-id> <category>accessing</category>

<body package="Cormas" selector="activeProbes">activeProbes
	^activeProbes ifNil: [activeProbes := OrderedCollection new]</body>

<body package="Cormas" selector="activeProbes:">activeProbes: anObject
	activeProbes := anObject</body>

<body package="Cormas" selector="myCormas">myCormas
	^myCormas</body>

<body package="Cormas" selector="myCormas:">myCormas: anObject
	myCormas := anObject</body>
</methods>

<methods>
<class-id>CormasNS.Kernel.CormasWS</class-id> <category>initialize-release</category>

<body package="Cormas" selector="initialize">initialize
	"Initialize a newly created instance. This method must answer the receiver."
	" *** Edit the following to properly initialize instance variables ***"
</body>
</methods>

<methods>
<class-id>CormasNS.Kernel.CormasWS</class-id> <category>web-service</category>

<body package="Cormas" selector="activateProbe:ofClass:">activateProbe: probeName ofClass: className
&lt;operationName: #ActivateProbeOfClass &gt;
	&lt;addParameter: #probeName type: #String &gt;
	&lt;addParameter: #className type: #String &gt;
	&lt;result: #Boolean &gt;
	self activeProbes add: (className, '&gt;&gt;', probeName).
^ true</body>

<body package="Cormas" selector="getProbe:ofClass:">getProbe: probeName ofClass: className
&lt;operationName: #GetProbeOfClass &gt;
	&lt;addParameter: #probName type: #ByteSymbol &gt;
	&lt;addParameter: #className type: #ByteSymbol &gt;
	&lt;result: #(#Collection #Float) &gt;
	^ ((self myCormas cormasModel data at: className) at: probeName) asOrderedCollection</body>

<body package="Cormas" selector="loadModel:FromParcelName:">loadModel: aModelName FromParcelName: parcelFileName 
	"modelName = &lt;String&gt;; aFileName = &lt;String&gt;"
	&lt;operationName: #LoadModelFromParcelName &gt;
	&lt;addParameter: #modelName type: #String &gt;
	&lt;addParameter: #parcelFileName type: #String &gt;
	&lt;result: #Boolean &gt;
	self activeProbes: nil.
	^self myCormas loadModel: aModelName FromParcelNamed: parcelFileName</body>

<body package="Cormas" selector="runOneStep">runOneStep
&lt;operationName: #RunOneStep &gt;
	&lt;result: #Boolean &gt; 
	self myCormas runStepByStep.
	^ true</body>

<body package="Cormas" selector="runSimu:">runSimu: duration
&lt;operationName: #RunSimu &gt;
	&lt;addParameter: #duration type: #SmallInteger &gt;
	&lt;result: #Boolean &gt; 
	self myCormas cormasModel class setActiveProbes: self activeProbes.
	self activeProbes: nil.
	self myCormas cormasModel initDataStructures.
	^ self myCormas runSimu: duration</body>

<body package="Cormas" selector="sayHello">sayHello
&lt;operationName: #SayHello &gt;
	&lt;result: #String &gt; 
	"self myCormas simManager enableBackward: false. "
	self myCormas runStepByStep.
^ 'hello!'</body>

<body package="Cormas" selector="setAttribute:ofClass:value:">setAttribute: attName ofClass: aClassName value: aValue
	
	| notThere aCAV aClass setter |
	"aClassName = symbol du nom de la class"
	"self setAttribute: 'infectiousPeriod' ofClass: Host value: 40"
	&lt;operationName: #SetAttributeOfClassValue &gt;
	&lt;addParameter: #attName type: #String &gt;
	&lt;addParameter: #className type: #ByteString &gt;
	&lt;addParameter: #value type: #Float &gt;
	&lt;result: #String &gt;
	notThere := true.
	aClass := myCormas cormasModel classFromSymbol: aClassName.
	(DefaultAttributesSetter attributsFromClass: aClass)
		do: [:n | n = attName ifTrue: [notThere := false]].
	notThere
		ifTrue:
			[ setter := (attName) asSymbol.
	(aClass findSelector: setter) isNil
				ifTrue: [^attName , 'is not attribute of class ' , aClass name].
			aClass allInstances
				do:
					[:i |  i perform: setter with: aValue].
			^'done'].
	aCAV := ClassAttributeValue newClass: aClass attribute: attName value:
			aValue.
	self myCormas cormasModel defaultAttributesSetter applyNewValue: aCAV.
	^'done'</body>

<body package="Cormas" selector="setInit:">setInit: initName
&lt;operationName: #SetInit &gt;
	&lt;addParameter: #initMethod type: #ByteSymbol &gt;
	&lt;result: #Boolean &gt;
	^ self myCormas setInit: initName</body>

<body package="Cormas" selector="setStep:">setStep: stepName
&lt;operationName: #SetStep &gt;
	&lt;addParameter: #stepMethod type: #ByteSymbol &gt;
	&lt;result: #Boolean &gt;
	^ self myCormas setStep: stepName</body>

<body package="Cormas" selector="setStringAttribute:ofClass:stringValue:">setStringAttribute: attName ofClass: aClassName stringValue: aValue
	
	| notThere aCAV aClass |
	"aClassName = symbol du nom de la class"
	"self setAttribute: 'infectiousPeriod' ofClass: Host value: 40"
	&lt;documentation: #'' &gt;
	&lt;operationName: #SetStringAttributeOfClassStringValue &gt;
	&lt;addParameter: #attName type: #ByteString &gt;
	&lt;addParameter: #className type: #ByteString &gt;
	&lt;addParameter: #value type: #String &gt;
	&lt;result: #String &gt;
	notThere := true.
	aClass:=  myCormas cormasModel classFromSymbol: aClassName .
	(DefaultAttributesSetter attributsFromClass: aClass)
		do: [:n | n = attName ifTrue: [notThere := false]].
	notThere ifTrue: [^attName , 'is not attribute of class ' , aClass name].
	aCAV := ClassAttributeValue newClass: aClass attribute: attName value:
			aValue.
	self myCormas cormasModel defaultAttributesSetter applyNewValue: aCAV.
	^'done'</body>

<body package="Cormas" selector="setStringAttribute:ofClass:value:">setStringAttribute: attName ofClass: aClassName value: aValue
	
	| notThere aCAV aClass |
	"aClassName = symbol du nom de la class"
	"self setAttribute: 'infectiousPeriod' ofClass: Host value: 40"
	&lt;operationName: #SetStringAttributeOfClassValue &gt;
	&lt;addParameter: #attName type: #String &gt;
	&lt;addParameter: #className type: #ByteString &gt;
	&lt;addParameter: #value type: #String &gt;
	&lt;result: #String &gt;
	notThere := true.
	aClass:=  myCormas cormasModel classFromSymbol: aClassName .
	(DefaultAttributesSetter attributsFromClass: aClass)
		do: [:n | n = attName ifTrue: [notThere := false]].
	notThere ifTrue: [^attName , 'is not attribute of class ' , aClass name].
	aCAV := ClassAttributeValue newClass: aClass attribute: attName value:
			aValue.
	self myCormas cormasModel defaultAttributesSetter applyNewValue: aCAV.
	^'done'</body>
</methods>

</st-source>
